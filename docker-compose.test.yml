# Docker Compose configuration for testing
# Used by GitLab CI/CD for integration tests

version: '3.8'

services:
  # Test runner service
  test-runner:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=lacentrale_test_db
      - DB_USER=postgres
      - DB_PASSWORD=test_password
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
    volumes:
      - .:/app
    networks:
      - test_network
    depends_on:
      postgres:
        condition: service_healthy
    command: |
      sh -c "
        echo 'Waiting for database...' &&
        sleep 10 &&
        echo 'Running database tests...' &&
        python -c 'from database.db_utils import DatabaseManager; db = DatabaseManager(\"postgresql://postgres:test_password@postgres:5432/lacentrale_test_db\", \"normalized\"); db.create_tables(); print(\"Database setup successful\")' &&
        echo 'Running unit tests...' &&
        pytest tests/ -v --tb=short
      "

  # Test database (override main postgres for testing)
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: lacentrale_test_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: test_password
    networks:
      - test_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d lacentrale_test_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

networks:
  test_network:
    driver: bridge
